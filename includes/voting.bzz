include "includes/constants.bzz"
include "includes/knn.bzz"

##
# Swarm statistics used as a reference to classify abnormal behavior
#
# @namespace
voting = {
  ##
  # Avergage distance covered in a time step for all robots.
  # @type {float}
  # @default
  .mean_distance = 0.0,

  ##
  # Robot count in the feature vector stigmergy.
  #
  # @type {float}
  # @default
  .num_robots = 0
}

##
# Update current robot estimation of other robots normal / abnormal behaviour
# based on collected feature vectors.
#
# **REQUIRES** Feature vector stigmergy to have been initialized using
# @link {init_stigmergy}. The feature vector stigmergy **must not** be empty.
#
function update_voting() {
  var fvs = {}

  for (i = 0, i < NUMBER_OF_ROBOTS, i = i + 1) {
    var value = stigmergy_fv.get(i)
    var time = stigmergy_fv.get(string.concat("t", string.tostring(i)))
    if (time == current_step - 1) {
      fvs[i] = value
    } else if (failed_robots[i]) {
      fvs[i] = 256
    } else {
      fvs[i] = 255
    }
  }

  if (verbose) {
    foreach(fvs, function(k,v) {
      flog(string.concat("[fv] ", string.tostring(k), ", ", string.tostring(v)))
    })
  }

  if (0) {
    flam_knn(fvs)
    return
  }

  update_fv(fvs)

  # Update all votes
  var local_vote = run_crm()
  foreach(local_vote, function(fv_value, vote) {
    foreach(fvs, function(robot_id, fv) {
      if (fv == fv_value and failed_robots[robot_id] == 0) {
        stigmergy_fv.put(
          string.concat("v", string.tostring(id), "_", string.tostring(robot_id)),
          vote
        )
      }
    })
  })
}
