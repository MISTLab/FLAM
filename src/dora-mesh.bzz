include "vec2.bzz"
include "string.bzz"
include "table.bzz"

include "includes/debug.bzz"
include "includes/constants.bzz"
include "includes/storage.bzz"
include "includes/risk.bzz"
include "includes/move.bzz"
include "includes/fitness.bzz"
include "includes/routing.bzz"


function init() {
    current_step = 0
    set_leds(0,255,0)
    math.rng.setseed(id)

    init_available_storage()
    init_stigmergy()
    init_hop_count()
    init_fitness()
}

# Executed every time step
function step() {
    if (current_step < EXPERIMENT_LENGTH) {
        move_hexagon()
        update_risk()

        broadcast_lowest_hop_count()
        broadcast_fitness()

        log(id, ": ", get_fitness())
    }

    # Stop robots when experiment is over
    if (current_step > EXPERIMENT_LENGTH) {
        set_wheels(0.0, 0.0)
        set_leds(255, 0, 0)
    }

    current_step = current_step + 1
}

function reset() {
}
 
function destroy() {
}
