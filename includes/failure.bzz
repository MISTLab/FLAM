include "includes/logging.bzz"

failed = 0

failed_robots = {}

function init_failure() {
  for (i = 0, i < NUMBER_OF_ROBOTS, i = i + 1) {
    failed_robots[i] = 0
  }
}

function failure() {
    rand = math.rng.uniform(0.2, 1.0)
    intensity = math.max(radiation_sensor.get_radiatation_intensity(sensor, pose.position.x, pose.position.y) + math.rng.uniform(-0.05, 0.05), 0.0)

    if (rand < intensity and id < 5) {
      # Robot death
        flog("[flt] Robot died")
        set_wheels(0.0, 0.0)
        set_leds(255, 0, 0)

        failed = 1
        return 1
    } else if (rand < intensity) {
      # Network faults
      flog("[flt] Network failure")
      for (i = 0, i < NUMBER_OF_ROBOTS, i = i + 1) {
        stigmergy_fv.put(string.concat("v", string.tostring(id), "_", string.tostring(i)), 2)
      }
      # Make a local copy of the stigmergy and
      # mock the shared storage
      stigmergy_local = {
        .id = 10 + id,
        .put = function(k,v) { stigmergy_local[k] = v },
        .get = function(k) { return stigmergy_local[k] },
        .foreach = function() {}
      }
      stigmergy_fv.foreach(function(key, value, robot_id) {
        stigmergy_local.put(key, value)
      })
      stigmergy_fv = stigmergy_local
    }
    return 0
}

function is_failed(){
    if (not failed){
        return failure() or (failed_robots[id] == 1)
    }

    return failed
}

