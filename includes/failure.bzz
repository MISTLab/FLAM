include "includes/logging.bzz"

failed = 0

failed_robots = {.0=0,.1=0,.2=0,.3=0,.4=0,.5=0,.6=0,.7=0,.8=0,.9=0}


function failure() {
    rand = math.rng.uniform(0.2, 1.0)
    intensity = math.max(radiation_sensor.get_radiatation_intensity(sensor, pose.position.x, pose.position.y) + math.rng.uniform(-0.05, 0.05), 0.0)

    if (rand < intensity and id == 0) {
        flog(string.concat("[flt] Robot ", string.tostring(id), " failed"))
        set_wheels(0.0, 0.0)
        set_leds(255, 0, 0)

        failed = 1
        return 1
    } else if (rand < intensity and id == 1) {
      flog(string.concat("[flt] Robot #", string.tostring(id)," Network fault"))
      for (i = 0, i < 10, i = i + 1) {
        stigmergy_fv.put(string.concat("v", string.tostring(id), string.tostring(i)), 2)
      }
      # Make a local copy of the stigmergy and
      # mock the shared storage
      stigmergy_local = {
        .id = 10 + id,
        .put = function(k,v) { stigmergy_local[k] = v },
        .get = function(k) { return stigmergy_local[k] }
      }
      stigmergy_fv.foreach(function(key, value, robot_id) {
          stigmergy_local.put(key, value)
      })
      stigmergy_fv = stigmergy_local
    }
    return 0
}

function is_failed(){
    if (not failed){
        return failure() or (failed_robots[id] == 1)
    }

    return failed
}

